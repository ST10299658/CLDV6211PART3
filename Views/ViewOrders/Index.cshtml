@model IEnumerable<KhumaloCraft.Models.Transaction>

@{
    ViewData["Title"] = "Index";
    var username = ViewBag.Username; // Retrieve username from ViewBag
    var itemsForUser = Model.Where(item => item.Username == username);
}

<h1 class="text-center">Transaction List</h1>

<div class="text-center mb-3">
    <a asp-action="Index" asp-controller="MyWork" class="btn btn-secondary">Go Back to Product Page</a>
</div>

<!-- Modal for Order Complete Message -->
<div class="modal fade" id="orderCompleteModal" tabindex="-1" role="dialog" aria-labelledby="orderCompleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderCompleteModalLabel">Order Complete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Your order has been processed successfully.
            </div>
            <div class="modal-footer">
                <a href="@Url.Action("Index", "MyWork")" class="btn btn-primary">Done</a>
            </div>
        </div>
    </div>
</div>

<!-- Payment Processing Message -->
<div id="paymentProcessingMessage" class="text-center" style="display: none;">
    <h4>Payment is being processed, please wait...</h4>
</div>

<table class="table table-bordered mx-auto">
    <thead>
        <tr>
            <th>Username</th>
            <th>Availability</th>
            <th>Description</th>
            <th>Image</th>
            <th>Product Name</th>
            <th>Price</th>
            <th>Product ID</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in itemsForUser)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Username)</td>
                <td>@Html.DisplayFor(modelItem => item.Availability)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>
                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                    {
                        <img src="@item.ImageUrl" alt="Product Image" style="max-width: 100px; max-height: 100px;" />
                    }
                    else
                    {
                        <span>No Image</span>
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>@Html.DisplayFor(modelItem => item.Product.ProductId)</td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.TransactionId" class="btn btn-info">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.TransactionId" class="btn btn-danger">Delete</a>
                </td>
            </tr>
            <tr>
                
            </tr>
        }
    </tbody>
</table>
<form asp-action="ProcessPayment" asp-controller="ViewOrders" method="post" class="d-inline">

    <button type="button" class="btn btn-warning d-block mx-auto mb-3" onclick="processPayment()">Pay</button>

                    </form>

@section Scripts {
    <script>
        // Function to show Order Complete modal
        function showOrderCompleteModal() {
            $('#orderCompleteModal').modal('show'); // Show the modal
        }

        // Function to send order confirmation and show modal
        function sendOrderConfirmation(transactionId) {
            // You can perform AJAX request or any logic here
            // For now, just showing the modal
            showOrderCompleteModal();
        }

        // Function to simulate payment processing message
        function processPayment() {
            $('#paymentProcessingMessage').show(); // Show payment processing message
            setTimeout(function () {
                $('#paymentProcessingMessage').hide(); // Hide after 5 seconds
                showOrderCompleteModal(); // Show order complete modal
            }, 5000); // 5 seconds
        }

        // Automatically close modal after it's shown
        $('#orderCompleteModal').on('shown.bs.modal', function () {
            setTimeout(function () {
                $('#orderCompleteModal').modal('hide');
                window.location.href = '@Url.Action("Index", "MyWork")'; // Redirect after closing modal
            }, 3000); // Close after 3 seconds (adjust as needed)
        });
    </script>
}
